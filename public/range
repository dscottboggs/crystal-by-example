<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Crystal by Example: Range</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script>
      onkeydown = (e) => {
          
          if (e.key == "ArrowLeft") {
            window.location.href = 'types';
          }
          
          
      }
  </script>
  <body>
    <div class="example" id="range">
      <h2><a href="index.html">Crystal by Example</a>: Range</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>A range is for enumerating or iterating over a set of values defined by
their start and end point. It is represented by the beginning value,
followed by either two or three dots, followed by the end value.</p>

          </td>
          <td class="code empty leading">
           
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>For example, a range representing all the numbers up to and including 10</p>

          </td>
          <td class="code leading">
           <div class="highlight"><pre><span></span><span class="n">one_through_ten</span> <span class="o">=</span> <span class="mi">1</span><span class="o">..</span><span class="mi">10</span>
<span class="nb">puts</span> <span class="n">one_through_ten</span><span class="o">.</span><span class="n">join</span> <span class="s2">&quot;, &quot;</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Or all the numbers between 1 and 10</p>

          </td>
          <td class="code leading">
           <div class="highlight"><pre><span></span><span class="nb">puts</span> <span class="p">(</span><span class="mi">1</span><span class="o">...</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">join</span> <span class="s2">&quot;, &quot;</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>This doesn't just apply to numbers, though, it can be any type which defines the <code>#succ</code> method.</p>

          </td>
          <td class="code leading">
           <div class="highlight"><pre><span></span><span class="nb">puts</span> <span class="p">(</span><span class="n">a</span><span class="o">..</span><span class="n">z</span><span class="p">)</span><span class="o">.</span><span class="n">join</span> <span class="s2">&quot;, &quot;</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Even custom types</p>

          </td>
          <td class="code leading">
           <div class="highlight"><pre><span></span><span class="k">class</span> <span class="nc">CharWithNumber</span>
  <span class="bp">property</span> <span class="n">char</span> <span class="p">:</span> <span class="nb">Char</span>
  <span class="bp">property</span> <span class="n">number</span> <span class="p">:</span> <span class="nb">Int32</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
           <div class="highlight"><pre><span></span>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="vi">@char</span> <span class="o">=</span> <span class="n">a</span><span class="p">,</span> <span class="vi">@number</span> <span class="o">=</span> <span class="mi">0</span><span class="p">);</span> <span class="k">end</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
           <div class="highlight"><pre><span></span>  <span class="k">def</span> <span class="nf">succ</span>
    <span class="kp">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">new</span> <span class="vi">@char</span><span class="o">.</span><span class="n">succ</span><span class="p">,</span> <span class="vi">@number</span><span class="o">.</span><span class="n">succ</span>
  <span class="k">end</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
           <div class="highlight"><pre><span></span>  <span class="k">def</span> <span class="nf">to_s</span><span class="p">(</span><span class="n">io</span><span class="p">)</span>
    <span class="n">io</span> <span class="o">&lt;&lt;</span> <span class="n">to_s</span>
  <span class="k">end</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
           <div class="highlight"><pre><span></span>  <span class="k">def</span> <span class="nf">to_s</span>
    <span class="s2">&quot;</span><span class="si">#{</span><span class="n">char</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">number</span><span class="si">}</span><span class="s2">&quot;</span>
  <span class="k">end</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
           <div class="highlight"><pre><span></span>  <span class="k">def</span> <span class="nf">inspect</span><span class="p">(</span><span class="n">io</span><span class="p">)</span>
    <span class="n">to_s</span> <span class="n">io</span>
  <span class="k">end</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
           <div class="highlight"><pre><span></span>  <span class="k">def</span> <span class="o">&lt;</span><span class="p">(</span><span class="n">other</span><span class="p">)</span>
    <span class="n">char</span> <span class="o">&lt;</span> <span class="n">other</span><span class="o">.</span><span class="n">char</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
           <div class="highlight"><pre><span></span><span class="nb">puts</span> <span class="p">(</span><span class="n">CharWithNumber</span><span class="o">.</span><span class="n">new</span><span class="o">..</span><span class="n">CharWithNumber</span><span class="o">.</span><span class="n">new</span> <span class="n">c</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">join</span> <span class="n">n</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>The beginning or the end may be left off the range, indicating it is an
infinite range. For example, this prints all the perfect squares up to
400, along with their square roots</p>

          </td>
          <td class="code">
           <div class="highlight"><pre><span></span><span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="p">)</span><span class="o">.</span><span class="n">take_while</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2"> squared is </span><span class="si">#{</span><span class="n">n</span> <span class="o">*</span> <span class="n">n</span><span class="si">}</span><span class="s2">&quot;</span>
  <span class="n">n</span> <span class="o">*</span> <span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">400</span>
<span class="k">end</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      <a href="https://carc.in/#/r/8kdh" target="blank">
        <img title="Run code" src="crystal_icon.svg" class="run" />
      </a>
      
      <p class="footer">
        by the Crystal Community | based on <a href="https://gobyexample.com/">Go By Example</a> | <a href="https://github.com/dscottboggs/crystal-by-example/blob/master/examples/range">source</a> | <a href="https://github.com/dscottboggs/crystal-by-example/blob/master/LICENSE">license</a>
      </p>
    </div>
    <script>
      var codeLines = [];
                codeLines.push('
');
          codeLines.push('one_through_ten = 1..10
puts one_through_ten.join ", "
');
          codeLines.push('puts (1...10).join ", "
');
          codeLines.push('puts ('a'..'z').join ", "
');
          codeLines.push('class CharWithNumber
  property char : Char
  property number : Int32
');
          codeLines.push('  def initialize(@char = 'a', @number = 0); end
');
          codeLines.push('  def succ
    self.class.new @char.succ, @number.succ
  end
');
          codeLines.push('  def to_s(io)
    io << to_s
  end
');
          codeLines.push('  def to_s
    "#{char}/#{number}"
  end
');
          codeLines.push('  def inspect(io)
    to_s io
  end
');
          codeLines.push('  def <(other)
    char < other.char
  end
end
');
          codeLines.push('puts (CharWithNumber.new..CharWithNumber.new 'c', 2).join '\n'
');
          codeLines.push('(1..).take_while do |n|
  puts "#{n} squared is #{n * n}"
  n * n <= 400
end
');

    </script>
    <script src="site.js" async></script>
  </body>
</html>